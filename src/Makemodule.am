################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
program_libs = src/libupt.la ${project_libs}

# Programs need to link the c++ runtime if everything was compiled statically.
if !ENABLE_SHARED
program_libs += -lstdc++ -lm
endif

lib_LTLIBRARIES += src/libupt.la
pkgconfig_DATA = src/libupt.pc

include_HEADERS = \
    include/kpi_uptime.h \
    include/upt_library.h

if ENABLE_DRAFTS
include_HEADERS += \
    include/upt_server.h

endif
src_libupt_la_SOURCES = \
    src/dc.c \
    src/upt.c \
    src/platform.h

if ENABLE_DRAFTS
src_libupt_la_SOURCES += \
    src/upt_server.c

endif

src_libupt_la_CPPFLAGS = ${AM_CPPFLAGS}

src_libupt_la_LDFLAGS = \
    -version-info @LTVER@ \
    $(LIBTOOL_EXTRA_LDFLAGS)

if ON_MINGW
src_libupt_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

if ON_CYGWIN
src_libupt_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

src_libupt_la_LIBADD = ${project_libs}

if ENABLE_KPI_UPTIME
bin_PROGRAMS += src/kpi-uptime
src_kpi_uptime_CPPFLAGS = ${AM_CPPFLAGS}
src_kpi_uptime_LDADD = ${program_libs}
src_kpi_uptime_SOURCES = src/kpi_uptime.c
src_kpi_uptime_configdir = $(sysconfdir)/kpi-uptime
if WITH_SYSTEMD_UNITS
src_kpi_uptime_servicedir = @prefix@/lib/systemd/system
src_kpi_uptime_service_DATA = src/kpi-uptime.service
src_kpi_uptime_tmpfilesdir = @prefix@/lib/tmpfiles.d/
src_kpi_uptime_tmpfiles_DATA = src/kpi-uptime.conf
endif #WITH_SYSTEMD_UNITS
endif #ENABLE_KPI_UPTIME

if ENABLE_UPT_SELFTEST
check_PROGRAMS += src/upt_selftest
noinst_PROGRAMS += src/upt_selftest
src_upt_selftest_CPPFLAGS = ${AM_CPPFLAGS}
src_upt_selftest_LDADD = ${program_libs}
src_upt_selftest_SOURCES = src/upt_selftest.c
endif #ENABLE_UPT_SELFTEST

# define custom target for all products of /src
src:
	src/kpi-uptime \
	src/upt_selftest \
	src/libupt.la

	gsl -target:- project.xml

check-local: src/upt_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/upt_selftest

check-verbose: src/upt_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/upt_selftest -v

# Run the selftest binary under valgrind to check for memory leaks
memcheck: src/upt_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=memcheck \
		--leak-check=full --show-reachable=yes --error-exitcode=1 \
		--suppressions=$(srcdir)/src/.valgrind.supp \
		$(srcdir)/src/upt_selftest

# Run the selftest binary under valgrind to check for performance leaks
callcheck: src/upt_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=callgrind \
		$(srcdir)/src/upt_selftest

# Run the selftest binary under gdb for debugging
debug: src/upt_selftest
	$(LIBTOOL) --mode=execute gdb -q \
		$(srcdir)/src/upt_selftest

# Run the selftest binary with verbose switch for tracing
animate: src/upt_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/upt_selftest -v

if WITH_GCOV
coverage: src/upt_selftest
	@echo "called configure --with-gcov"
	lcov --base-directory . --directory . --zerocounters -q
	$(MAKE) check
	lcov --base-directory . --directory . --capture -o coverage.info
	lcov --remove coverage.info "/usr*" -o coverage.info
	lcov --remove coverage.info "upt_selftest.c" -o coverage.info
	$(RM) -rf coverage/*
	genhtml -o coverage/ -t "kpi-uptime test coverage" --num-spaces 4 coverage.info
else
coverage: src/upt_selftest
	@echo "call make clean && configure --with-gcov to enable code coverage"
	@exit 1
endif

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
